---
title: "Usando o R para tratar de dados de levantamentos geoquímicos"
subtitle: "Mini-Curso"
author: "Viviane C. Ferrari"
date: "`r Sys.Date()`"
date-format: "DD/MM/YYYY"
format: 
  revealjs:
    logo: "img/logo_digeoqR2.png"
    width: 1600
    height: 900
    self-contained: false
    incremental: false
    footer: "Slides de [Viviane C Ferrari](https://github.com/VivianeCF/R4geoq.git)"
    theme: ["css/custom.scss"]
    slide-number: c/t
    show-slide-number: all
    hash-type: number
    preview-links: false
---

## Conteúdo do Curso R
::: {.incremental}
1.  [Introdução](#Introdução)

2.  [Sessão do R no RSTUDIO](#R_RSTUDIO)

3.  [Objetos do R](#obj_R)

4.  [Condições e Loops](#cond_loop)

5.  [Funções e Pacotes](#func_pac)

6.  [Preparação dos dados](#prep_dados)

7.  [Análise dos dados](#analise) / [Química](#quimica) / [Mineralometria](#mineral)

8.  [Visualização dos dados](#vis_dados)

9.  [Tarefas finais](#tarefas)

10. [Feedback e encerramento](#feed_enc)
:::
## Introdução{#Introdução}

### Objetivo do Curso

Preparar os geoquímicos para usar o R em sua rotina de trabalho.

### Forma de Aprendizado
::: {.incremental}
- Primeiramente, os participantes terão um período para se familiarizar com o ambiente do RStudio e entender os passos que antecedem a edição dos códigos.\
- Serão apresentados os principais objetos, operadores e outras funcionalidades do R. Em seguida veremos como funciona o R aplicando nos nossos dados com o uso de funções e pacotes específicos.\
- No final será apresentado um exemplo de fluxo de trabalho com as principais etapas do processamento dos dados geoquímicos.
:::
## Sessão do R no RSTUDIO {#R_RSTUDIO}

###  Importação de dados  

```{r echo=TRUE}
csv <- read.csv2("data/GQ901225_Lote1515_S.csv")
head(csv)
```
##
###   Exportação de dados 
##
###   Uso de GUI
##
###   Instalação de pacotes
##
###   Ajuda
##
###   Código em execução
##
###   Saída
##
###   Forma de trabalho no R

## Objetos do R {#obj_R}

-   Tipos de objetos em R

-   Manipulação de objetos

## Condições e Loops {#cond_loop}

-   Estruturas condicionais

-   Loops em R

-   Aplicações práticas

## Funções e Pacotes {#func_pac}

-   Criando funções em R

-   Utilizando e instalando pacotes

-   Gerenciamento de dependências

## Preparação dos dados {#prep_dados}

-   Planejamento das estações

-   Geração das Bacias

-   Intercecção feição e bacia

-   Rotulagem dos dados

-   Reunir unificar boletins

-   Combinar dados de campo / análises

## Análise dos dados

### Química {#quimica}

-   Distribuição estatística

-   Testes estatísticos

-   Sumário estatístico

-   Limiares/Anomalias/Background

-   Análise de agrupamento

-   Análise de Fatores

-   Análise de Principais Componentes

------------------------------------------------------------------------

## Análise dos dados

### Mineralometria {#mineral}

-   Tabela de frequência

-   Lista de minerais (abreviatura)

## Visualização dos Dados {#vis_dados}

-   Estações e bacias

-   Mapas

-   Gráficos EDA

-   Gráficos bivariados

-   Gráficos de barras

-   Correlogramas

-   Diagramas de rede

## Tarefas finais {#tarefas}

-   Revisão do curso
-   Projeto final

## Feedback e encerramento {#feed_enc}

-   Desenvolvimento do pacote digeoqR
-   Suporte da linguagem R
-   Sistema para Automação e Produção

------------------------------------------------------------------------

```{r echo=TRUE}
# Definindo os dados para o eixo x e y
x <- c(1, 2, 3, 4, 5)
y <- c(3, 7, 2, 9, 4)

# Criando o gráfico de dispersão
plot(x, y, main= "Gráfico de Dispersão Exemplo", xlab="Eixo X", ylab="Eixo Y", pch=19, col="blue")

# Adicionando uma linha de regressão ao gráfico
abline(lm(y ~ x), col="red")

```

------------------------------------------------------------------------

```{r  echo=FALSE}
# Criando um gráfico com todos os símbolos
# initialization
par(mar=c(3,3,3,3))
num <- 0 ; 
num1 <- 0
plot(0,0 , xlim=c(0,21) , ylim=c(0.5,6.5), col="white" , yaxt="n" , ylab="" , xlab="")
 
#fill the graph
for (i in seq(1,20)){
  points(i,1 , pch=i , cex=3)
  points(i,2 , col=i , pch=16 , cex=3)
  points(i,3 , col="black" , pch=16 , cex=i*0.25)
  
  #lty
  if(i %in% c(seq(1,18,3))){
        num=num+1
    points(c(i,i+2), c(4,4) , col="black" , lty=num , type="l" , lwd=2)
        text(i+1.1 , 4.15 , num)
        }
  
  #type and lwd 
  if(i %in% c(seq(1,20,5))){
    num1=num1+1
    points(c(i,i+1,i+2,i+3), c(5,5,5,5) , col="black"  , type=c("p","l","b","o")[num1] , lwd=2)
    text(i+1.1 , 5.2 , c("p","l","b","o")[num1] )
    points(c(i,i+1,i+2,i+3), c(6,6,6,6) , col="black"  , type="l",  lwd=num1)
    text(i+1.1 , 6.2 , num1 )
 
    }
  }
 
#add axis
axis(2, at = c(1,2,3,4,5,6), labels = c("pch" , "col" , "cex" , "lty", "type" , "lwd" ), 
     tick = TRUE, col = "black", las = 1, cex.axis = 0.8)

```

